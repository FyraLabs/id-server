// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/fyralabs/id-server/ent/schema"
	"github.com/fyralabs/id-server/ent/session"
	"github.com/fyralabs/id-server/ent/totpmethod"
	"github.com/fyralabs/id-server/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for createdAt field.
	sessionDescCreatedAt := sessionFields[3].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the createdAt field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	totpmethodFields := schema.TOTPMethod{}.Fields()
	_ = totpmethodFields
	// totpmethodDescCreatedAt is the schema descriptor for createdAt field.
	totpmethodDescCreatedAt := totpmethodFields[2].Descriptor()
	// totpmethod.DefaultCreatedAt holds the default value on creation for the createdAt field.
	totpmethod.DefaultCreatedAt = totpmethodDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescEmailVerified is the schema descriptor for emailVerified field.
	userDescEmailVerified := userFields[5].Descriptor()
	// user.DefaultEmailVerified holds the default value on creation for the emailVerified field.
	user.DefaultEmailVerified = userDescEmailVerified.Default.(bool)
}
